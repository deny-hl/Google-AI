
import React from 'react';

interface StartScreenProps {
  onStart: () => void;
  onLoad: () => void;
  saveExists: boolean;
  error: string | null;
}

const StartScreen: React.FC<StartScreenProps> = ({ onStart, onLoad, saveExists, error }) => {
  return (
    <div className="text-center bg-black/50 p-8 rounded-lg shadow-2xl max-w-2xl mx-auto animate-fade-in">
      <h1 className="text-5xl md:text-7xl font-bold mb-4 font-cinzel text-shadow-lg">Gemini Narrative Engine</h1>
      <p className="text-lg md:text-xl text-gray-300 mb-8">
        An interactive story, dynamically generated by AI. Your choices will shape the world and your destiny within it.
      </p>
      {error && (
        <div className="bg-red-900/50 border border-red-500 text-red-200 px-4 py-3 rounded-lg relative mb-6" role="alert">
          <strong className="font-bold">Error: </strong>
          <span className="block sm:inline">{error}</span>
        </div>
      )}
      <div className="flex flex-col sm:flex-row gap-4 justify-center">
        <button
          onClick={onStart}
          className="bg-purple-600 hover:bg-purple-700 text-white font-bold py-3 px-8 text-xl rounded-full transition duration-300 ease-in-out transform hover:scale-105 shadow-lg focus:outline-none focus:ring-4 focus:ring-purple-400"
        >
          Begin New Story
        </button>
        {saveExists && (
          <button
            onClick={onLoad}
            className="bg-gray-700 hover:bg-gray-600 text-white font-bold py-3 px-8 text-xl rounded-full transition duration-300 ease-in-out transform hover:scale-105 shadow-lg focus:outline-none focus:ring-4 focus:ring-gray-500"
          >
            Load Saved Game
          </button>
        )}
      </div>
    </div>
  );
};

export default StartScreen;
